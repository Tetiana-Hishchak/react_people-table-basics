{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleList.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","name","slug","sex","to","pathname","classNames","PeopleList","people","useParams","map","born","died","motherName","fatherName","mother","find","mam","undefined","father","dad","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","length","getLinkClass","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f39915b6.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${slug}`,\n      }}\n      className={classNames({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex, born, died, motherName, fatherName,\n          } = person;\n          const mother = motherName\n            ? people.find(mam => mam.name === motherName) : undefined;\n          const father = fatherName\n            ? people.find(dad => dad.name === fatherName) : undefined;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? (\n                    <PersonLink person={mother} />\n                  )\n                  : motherName || (<span> - </span>)}\n              </td>\n              <td>\n                {father\n                  ? (\n                    <PersonLink person={father} />\n                  )\n                  : fatherName || (<span> - </span>)}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleList } from './PeopleList';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {people.length === 0 ? (\n            <>\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            </>\n          )\n            : <PeopleList people={people} />}\n        </div>\n        {!isLoading && isError && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n      </div>\n    </>\n  );\n};\n","import {\n  Routes, Route, NavLink, Navigate,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport './App.scss';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst getLinkClass = ({ isActive }:{ isActive: boolean }) => classNames(\n  'navbar-item', {\n    'has-background-grey-lighter': isActive,\n  },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink to=\"/\" className={getLinkClass}>\n            Home\n          </NavLink>\n          <NavLink to=\"/people\" className={getLinkClass}>\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}